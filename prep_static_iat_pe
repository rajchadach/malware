import pandas as pd
import sys
import pandas as pd
import re

df_csv = pd.read_csv("static.csv", index_col=None, dtype='str')

for index, row in df_csv.iterrows():
  if str(row['kernel32.dll']) != "":
      if "sleep" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,1] = "TRUE"
      if "exitprocess" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,2] = "TRUE"
      if "copyfile" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,3] = "TRUE"
      if "globalmemorystatusex" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,4] = "TRUE"
      if "createwaitabletimera" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,5] = "TRUE" 
      if "readfile" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,6] = "TRUE"
      if "closehandle" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,7] = "TRUE"
      if "getstartupinfo" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,8] = "TRUE"
      if "leavecriticalsection" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,9] = "TRUE"
      if "rtllookupfunctionentry" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,10] = "TRUE"
      if "rtlvirtualunwind" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,11] = "TRUE"
      if "createevent" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,12] = "TRUE"
      if str(row['kernel32.dll']).lower() == "id":
        df_csv.iloc[index,13] = "TRUE"
      if "rtlcapturecontext" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,14] = "TRUE"
      if "entercriticalsection" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,15] = "TRUE"
      if "setevent" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,16] = "TRUE"
      if "resetevent" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,17] = "TRUE"
      if "rtladdfunctiontable" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,18] = "TRUE"
      if re.findall(r'(findfirstfilew|findnextfilew|findfirstfileexw)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,19] = "TRUE"
      if re.findall(r'(setfileattributesw|getfileattributesw|getfileattributesexw)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,20] = "TRUE"
      if "getprocessheap" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,21] = "TRUE"
      if "setfiletime" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,22] = "TRUE"
      if "getconsolemode" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,23] = "TRUE"
      if re.findall(r'(setfilepointer|setendoffile|getwindowsdirectorya|getsysteminfo|getmodulefilenamea|createdirectorya)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,24] = "TRUE"
      if re.findall(r'(enumresourcenamesw|getvolumepathnamew|loadresource|localalloc|localfree)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,25] = "TRUE"
      if re.findall(r'(addvectoredexceptionhandler|setwaitabletimer)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,26] = "TRUE"
      if re.findall(r'(loadLibrarya|loadlibraryexw|loadLibraryw|loadlibraryexa)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,27] = "TRUE"
      if re.findall(r'(getprocaddress|getprocessid)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,28] = "TRUE"
      if "virtualalloc" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,29] = "TRUE"
      if "virtualfree" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,30] = "TRUE"
      if "virtualprotect" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,31] = "TRUE"
      if re.findall(r'(virtualquery|virtualqueryex)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,32] = "TRUE"
      if re.findall(r'(tlsgetvalue|tlssetvalue)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,33] = "TRUE"
      if re.findall(r'(createmutexa|createmutexw)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,34] = "TRUE"
      if re.findall(r'(getcurrentprocess|getcurrentprocessid|getcurrentthreadid|getcurrentthread)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,35] = "TRUE"
      if re.findall(r'(freelibrary|freelibraryandexitthread)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,36] = "TRUE"
      if re.findall(r'(writefile|replacefilew|writeprocessmemory)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,37] = "TRUE"
      if re.findall(r'(createProcessa|createprocessw|createthread)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,38] = "TRUE"
      if re.findall(r'(createfilea_createfilew_createdirectoryw)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,40] = "TRUE"
      if re.findall(r'(deletefilea|deletefilew|removedirectoryw|removedirectorya)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,41] = "TRUE"
      if re.findall(r'(getcommandlinea|getcommandlinew)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,42] = "TRUE"
      if re.findall(r'(movefileexw|movefileexa|movefilew)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,43] = "TRUE"
      if "deletecriticalsection" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,44] = "TRUE"
      if "getenvironmentvariablew" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,45] = "TRUE"
      if re.findall(r'(setenvironmentvariablew|setenvironmentvariablea)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,46] = "TRUE"
      if "terminateprocess" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,46] = "TRUE"
      if "setdlldirectoryw" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,47] = "TRUE"
      if re.findall(r'(widechartomultibyte|multibytetowidechar)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,48] = "TRUE"
      if re.findall(r'(getmodulefilenamew|getmodulehandlew|getmodulehandleexw|getmodulehandleexa|getmodulehandlea)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,49] = "TRUE"
      if re.findall(r'(gettemppathw|gettempfilenamew|gettempfilenamea)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,50] = "TRUE"
      if "lockresource" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,51] = "TRUE"
      if "getexitcodeprocess" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,52] = "TRUE"
      if re.findall(r'(findresourcew|findresourceexw)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,53] = "TRUE"
      if "heapcreate" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,54] = "TRUE"
      if "heapdestroy" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,55] = "TRUE"
      if re.findall(r'(heapfree_heapalloc)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,56] = "TRUE"
      if "heaprealloc" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,57] = "TRUE"
      if re.findall(r'(suspendthread|resumethread)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,58] = "TRUE"
      if "comparefiletime" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,59] = "TRUE"
      if re.findall(r'(writeconsolew|readconsolew|writeconsolea)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,60] = "TRUE"
      if re.findall(r'(getcurrentdirectoryw|getwindowsdirectoryw|getsystemwindowsdirectoryw)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,61] = "TRUE"
      if re.findall(r'(getdrivetypew|getsystemdirectoryw|getsystemdirectorya|getlogicaldrives)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,62] = "TRUE"
      if re.findall(r'(getdiskfreespacew|getvolumeinformationw|getdiskfreespaceexw)', str(row['kernel32.dll']).lower()):
        df_csv.iloc[index,63] = "TRUE"
      if "setcurrentdirectoryw" in str(row['kernel32.dll']).lower():
        df_csv.iloc[index,64] = "TRUE"

for index, row in df_csv.iterrows():
  if str(row['user32.dll']) != "":
      if re.findall(r'(enumchildwindows|enumthreadwindows)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,1] = "TRUE"
      if re.findall(r'(setprocesswindowstation|getprocesswindowstation)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,2] = "TRUE"
      if re.findall(r'(openwindowstationw|opendesktopw)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,3] = "TRUE"
      if re.findall(r'(getuserobjectsecurity|setuserobjectsecurity)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,4] = "TRUE"
      if re.findall(r'(lockwindowupdate)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,5] = "TRUE"
      if re.findall(r'(registerhotkey|unregisterhotkey)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,6] = "TRUE"
      if re.findall(r'(sendinput|attachthreadinput)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,7] = "TRUE"
      if re.findall(r'(openclipboard)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,8] = "TRUE"
      if re.findall(r'(getkeyboardlayout|getkeyboardstate|getkeyboardlayoutnamew|setkeyboardstate|getkeyboardlayoutlist)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,9] = "TRUE"
      if re.findall(r'(getasynckeystate|getkeystate)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,10] = "TRUE"
      if re.findall(r'(setactivewindow|setwindowshookexa|unhookwindowshookex|setwindowshookexw)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,11] = "TRUE"
      if re.findall(r'(loadbitmapa)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,12] = "TRUE"
      if re.findall(r'(getlastactivepopup)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,13] = "TRUE"
      if re.findall(r'(checkmenuitem|getsystemmenu)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,14] = "TRUE"
      if re.findall(r'(clienttoscreen)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,15] = "TRUE"
      if re.findall(r'(activatekeyboardlayout)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,16] = "TRUE"
      if re.findall(r'(adjustwindowrectex)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,17] = "TRUE"
      if re.findall(r'(callnexthookex)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,18] = "TRUE"
      if re.findall(r'(iswindowenabled|iswindowvisible|iswindow)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,19] = "TRUE"
      if re.findall(r'(getdc)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,20] = "TRUE"
      if re.findall(r'(systemparametersinfoa)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,21] = "TRUE"
      if re.findall(r'(messageboxa)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,22] = "TRUE"
      if re.findall(r'(messageboxw)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,23] = "TRUE"
      if re.findall(r'(dialogboxparamw|dialogboxparama)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,24] = "TRUE"
      if re.findall(r'(enddialog)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,25] = "TRUE"
      if re.findall(r'(getdlgitem)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,26] = "TRUE"
      if re.findall(r'(getwindowtextlengthw|getwindowtextw|getwindowtexta|getwindowdc)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,27] = "TRUE"
      if re.findall(r'(invalidaterect|validaterect)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,28] = "TRUE"
      if re.findall(r'(getwindowrect)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,29] = "TRUE"
      if re.findall(r'(isdlgbuttonchecked)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,30] = "TRUE"
      if re.findall(r'(mapdialogrect)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,31] = "TRUE"
      if re.findall(r'(movewindow)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,32] = "TRUE"
      if re.findall(r'(screentoclient)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,33] = "TRUE"
      if re.findall(r'(loadimagea)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,34] = "TRUE"
      if re.findall(r'(peekmessagea)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,35] = "TRUE"
      if re.findall(r'(postquitmessage)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,36] = "TRUE"
      if re.findall(r'(setforegroundwindow)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,37] = "TRUE"
      if re.findall(r'(setwindowlonga)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,38] = "TRUE"
      if re.findall(r'(exitwindowsex)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,39] = "TRUE"
      if re.findall(r'(callwindowproca)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,40] = "TRUE"
      if re.findall(r'(charpreva)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,41] = "TRUE"
      if re.findall(r'(getwindowlonga)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,42] = "TRUE"
      if re.findall(r'(loadicona)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,43] = "TRUE"
      if re.findall(r'(getwindowlonga)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,44] = "TRUE"
      if re.findall(r'(defwindowprocw|defwindowproca)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,45] = "TRUE"
      if re.findall(r'(waitforinputidle)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,46] = "TRUE"
      if re.findall(r'(getmessagew)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,47] = "TRUE"
      if re.findall(r'(getmonitorinfow)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,48] = "TRUE"
      if re.findall(r'(monitorfrompoint)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,49] = "TRUE"
      if re.findall(r'(isdialogmessagew)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,50] = "TRUE"
      if re.findall(r'(loadbitmapw|loadbitmapa)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,51] = "TRUE"
      if re.findall(r'(setwindowlongw)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,52] = "TRUE"
      if re.findall(r'(getwindowlongw)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,53] = "TRUE"
      if re.findall(r'(getcursorpos)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,54] = "TRUE"
      if re.findall(r'(unregisterclassw|registerclassw|registerclassa|registerclassexw)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,55] = "TRUE"
      if re.findall(r'(callwindowprocw)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,56] = "TRUE"
      if re.findall(r'(getactivewindow)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,57] = "TRUE"
      if re.findall(r'(charnextw)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,58] = "TRUE"
      if re.findall(r'(messagebeep)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,59] = "TRUE"
      if re.findall(r'(setwindowpos)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,60] = "TRUE"
      if re.findall(r'(loadiconw)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,61] = "TRUE"
      if re.findall(r'(enablewindow)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,62] = "TRUE"
      if re.findall(r'(releasedc)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,63] = "TRUE"
      if re.findall(r'(setfocus)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,64] = "TRUE"
      if re.findall(r'(getclientrect)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,65] = "TRUE"
      if re.findall(r'(loadimagew)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,66] = "TRUE"
      if re.findall(r'(enumwindows)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,67] = "TRUE"
      if re.findall(r'(beginpaint)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,68] = "TRUE"
      if re.findall(r'(endpaint)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,69] = "TRUE"
      if re.findall(r'(loadacceleratorsw)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,70] = "TRUE"
      if re.findall(r'(translateacceleratorw)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,71] = "TRUE"
      if re.findall(r'(mapwindowpoints)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,72] = "TRUE"
      if re.findall(r'(getparent)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,73] = "TRUE"
      if re.findall(r'(charupperbuffw|charupperw|charuppera)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,74] = "TRUE"
      if re.findall(r'(wsprintfw|wsprintfa)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,75] = "TRUE"
      if re.findall(r'(setTimer|killtimer)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,76] = "TRUE"
      if re.findall(r'(setwindowtextw|setwindowtexta)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,77] = "TRUE"
      if re.findall(r'(createwindowexa|createdialogparamw|createdesktopw|createwindowexw)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,78] = "TRUE"
      if re.findall(r'(closewindow|destroywindow|closedesktop|destroymenu)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,79] = "TRUE"
      if re.findall(r'(showwindow|updatewindow|monitorfromwindow)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,80] = "TRUE"
      if re.findall(r'(loadstringw|loadstringa)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,81] = "TRUE"
      if re.findall(r'(sendMessagew|sendmessagea|getmessagea|dispatchmessagea|dispatchmessagew)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,82] = "TRUE"
      if re.findall(r'(getforegroundwindow|loadcursora|setcursor|loadcursorw)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,83] = "TRUE"
      if re.findall(r'(mapvirtualkeyw|mapvirtualkeya|mapvirtualkeyexw)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,84] = "TRUE"
      if re.findall(r'(getuserobjectinformationw|getprocesswindowstation|enumthreadwindows)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,85] = "TRUE"
      if re.findall(r'(getsystemmetrics)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,86] = "TRUE"
      if re.findall(r'(translatemessage)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,87] = "TRUE"
      if re.findall(r'(peekmessagew|postthreadmessagew|postmessagew|postmessagea)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,88] = "TRUE"
      if re.findall(r'(msgwaitformultipleobjectsex)', str(row['user32.dll']).lower()):
        df_csv.iloc[index,89] = "TRUE"


df_csv.to_csv('test.csv')
